{"version":3,"sources":["components/cabecera/Header.js","components/cabecera/Menu.js","components/Carta.js","components/Main.js","components/errores/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Component","Menu","x","document","getElementById","className","id","Link","to","index_es","title","onClick","this","myFunction","Carta","style","backgroundColor","props","bcolor","children","Somos","alignSelf","display","textAlign","Main","Carta_Carta","Main_Somos","NotFound","App","Header_Header","Menu_Menu","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","messages","es","en","language","navigator","split","addLocaleData","Object","toConsumableArray","locale_en","concat","locale_es","ReactDOM","render","locale","BrowserRouter","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a897ca5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div>\n                GRAY JACKET STUDIOS\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport '../../css/menu.css';\n\n\n\n\n\nexport default class Menu extends Component {\n\n    myFunction() {\n        var x = document.getElementById(\"centered_nav\");\n        if (x.className === \"rc_nav\") {\n            x.className += \" responsive\";\n        } else {\n            x.className = \"rc_nav\";\n        }\n    }\n\n\n\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"rc_nav\" id=\"centered_nav\">\n                    <Link to=\"/\"><FormattedMessage id=\"menu.inicio\" /></Link>\n                    <Link to=\"/our-work\"><FormattedMessage id=\"menu.trabajos\" /></Link>\n                    <Link to=\"/our-games\"><FormattedMessage id=\"menu.juegos\" /></Link>\n                    <Link to=\"/who-we-are\"><FormattedMessage id=\"menu.somos\" /></Link>\n                    <Link to=\"/contact-us\"><FormattedMessage id=\"menu.contacto\" /></Link>\n\n                    <button title=\"Menu\" className=\"icon\" onClick={this.myFunction}>\n                        &#9776;\n                    </button>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport '../css/Carta.css';\n\nexport default class Carta extends Component {\n    render() {\n        return (\n            <div className=\"carta\" style={{ backgroundColor: this.props.bcolor || '#282c34' }}>\n                <div className=\"inside\">\n                    <h1>{this.props.title}</h1>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Carta from \"./Carta\";\nimport '../css/List.css';\n\n\n//En el main se entregara una pequeña introduccion, que hacemos y tecnologias\n\n\nconst Somos = () => {\n    return (\n        <div className=\"panel\">\n            <h1>\n                Que hacemos\n            </h1>\n            <p>\n                Nos dedicamos a entregar soluciones informaticas tales como:\n                </p>\n            <div style={{ alignSelf: 'center', display: 'inline-block' }} className=\"numberlist\">\n                <ol style={{ textAlign: \"left\" }}>\n                    <li><a>Paginas web</a></li>\n                    <li><a>Aplicaciones web</a></li>\n                    <li><a>Aplicaciones moviles/Apps</a></li>\n                    <li><a>Aplicaciones de escritorio</a></li>\n                    <li><a>Incorporación de nuevas caracteristicas a aplicaciones existentes</a></li>\n                    <li><a>Debugging</a></li>\n                    <li><a>Solucion de errores/bugs</a></li>\n\n                </ol>\n            </div>\n\n        </div>\n    );\n};\n\n\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <div>\n                <Carta\n                    title=\"Inicio\">\n                    <p>Gray Jacket Studios es un grupo conformado para proporcionar soluciones informaticas.</p>\n                    <p>Trabajamos con diferentes tecnologias y herramientas para brindar una amplia gama de soluciones, y asi abordar la necesidad que se necesita cubrir. </p>\n                </Carta>\n\n\n\n                <Somos />\n\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <h1>NOT FOUND</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/cabecera/Header';\nimport Menu from './components/cabecera/Menu';\nimport Main from './components/Main';\n\nimport NotFound from './components/errores/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <Header />\n        </header>\n\n        <Menu />\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\n\nimport locale_en from 'react-intl/locale-data/en';\nimport locale_es from 'react-intl/locale-data/es';\nimport messages_es from \"./translations/es.json\";\nimport messages_en from \"./translations/en.json\";\n\nconst messages = {\n    'es': messages_es,\n    'en': messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0];  // language without region code\n\n\naddLocaleData([...locale_en, ...locale_es]);\n\n\nReactDOM.render((\n    <IntlProvider locale={language} messages={messages[language]}>\n        <BrowserRouter>\n\n            <App />\n\n        </BrowserRouter>\n    </IntlProvider >\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}